options:
  type: INNODB

pkMediaItem:
  tableName: pk_media_item
  actAs:
    Timestampable: ~
    Taggable: ~
    Sluggable:
      fields: [title]
      unique: true
      builder: pkMediaItemTable::slugify
  columns:
    id:
      type: integer(4)
      primary: true
      autoincrement: true
    # Audio is not implemented
    type:
      type: enum
      notnull: true
      values: [image, video, audio]  
    service_url:
      type: string(200)
    # Original image format. For video this is the format of the thumbnail
    # (JPEG). Null if no thumbnail exists. You can ask for any size and any 
    # format and you'll get it, as a conversion of the original (which is 
    # then cached). If you ask for the "original" in a different format that 
    # will result in a conversion as well.
    
    # We don't use an enum here because this is briefly null when a 
    # new image is first saved.
    format:
      type: string(10)
    # Preferred still image or video dimensions. For a still image
    # these are the dimensions of the original. For video they are
    # the dimensions of the video stream.
    width:
      type: integer(4)
    height:
      type: integer(4)
    title:
      type: string(200)
      notnull: true
    description:
      type: string
    credit:
      type: string(200)
    owner_id:
      type: integer(4)
    # This is not implemented in a high-security way at all, you can
    # still directly access media URLs. This is normal on media sites
    # for performance reasons.
    view_is_secure:
      type: boolean
      notnull: true
      default: false

  relations:
    Owner:
      class: sfGuardUser
      foreign: id
      local: owner_id
      type: one
      onDelete: set null
      foreignAlias: MediaItems

