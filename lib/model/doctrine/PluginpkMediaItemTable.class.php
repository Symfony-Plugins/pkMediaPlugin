<?php
/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PluginpkMediaItemTable extends Doctrine_Table
{
  public function getLuceneIndex()
  {
    return pkZendSearch::getLuceneIndex($this);
  }
   
  public function getLuceneIndexFile()
  {
    return pkZendSearch::getLuceneIndexFile($this);
  }

  public function searchLucene($luceneQuery)
  {
    return pkZendSearch::searchLucene($this, $luceneQuery);
  }
  
  public function rebuildLuceneIndex()
  {
    return pkZendSearch::rebuildLuceneIndex($this);
  }
  
  public function optimizeLuceneIndex()
  {
    return pkZendSearch::optimizeLuceneIndex($this);
  }
  
  public function addSearchQuery(Doctrine_Query $q = null, $luceneQuery)
  {
    return pkZendSearch::addSearchQuery($this, $q, $luceneQuery);
  }
  
  static public function slugify($s)
  {
    $s = Doctrine_Inflector::urlize($s);
    $s = str_replace("/", "-", $s);
    return $s;
  }

  static public function getDirectory()
  {
    return sfConfig::get('sf_web_dir') .  "/media-items/";
  }

  // Returns items for all ids in $ids. If an item does not exist,
  // that item is not returned; this is not considered an error.
  // You can easily compare count($result) to count($ids). 
  static public function retrieveByIds($ids)
  {
    if (!count($ids))
    {
      // WHERE freaks out over empty lists. We don't.
      return array();
    }
    if (count($ids) == 1)
    {
      if (!$ids[0])
      {
        // preg_split and its ilk return a one-element array
        // with an empty string in it when passed an empty string.
        // Tolerate this.
        return array();
      }
    }
    // Return in the order requested (MySQL-specific).
    return Doctrine_Query::create()->
      select('m.*, FIELD(m.id, ' . implode(",", $ids) . ') AS rank')->
      from('pkMediaItem m')->
      whereIn("m.id", $ids)->
      orderby("rank")->
      execute();
  }
  static public $mimeTypes = array(
    "gif" => "image/gif",
    "png" => "image/png",
    "jpg" => "image/jpeg"
  );
}
